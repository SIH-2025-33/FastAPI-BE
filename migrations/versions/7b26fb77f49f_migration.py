"""Migration

Revision ID: 7b26fb77f49f
Revises: 
Create Date: 2025-09-21 17:02:05.333182

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7b26fb77f49f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('location_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_points_id'), 'location_points', ['id'], unique=False)
    op.create_table('trip_mode',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mode_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trip_mode_id'), 'trip_mode', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('streak', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('complaint',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('location_lat', sa.Float(), nullable=False),
    sa.Column('location_lon', sa.Float(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_complaint_id'), 'complaint', ['id'], unique=False)
    op.create_table('data_collector',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('speed', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_used', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_collector_id'), 'data_collector', ['id'], unique=False)
    op.create_table('estimated_route_time',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origin_location_id', sa.Integer(), nullable=True),
    sa.Column('destination_location_id', sa.Integer(), nullable=True),
    sa.Column('mode_id', sa.Integer(), nullable=True),
    sa.Column('estimated_duration_minutes', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['destination_location_id'], ['location_points.id'], ),
    sa.ForeignKeyConstraint(['mode_id'], ['trip_mode.id'], ),
    sa.ForeignKeyConstraint(['origin_location_id'], ['location_points.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_estimated_route_time_id'), 'estimated_route_time', ['id'], unique=False)
    op.create_table('journey',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('origin', sa.String(), nullable=True),
    sa.Column('destination', sa.String(), nullable=True),
    sa.Column('purpose', sa.String(), nullable=True),
    sa.Column('is_verified_by_user', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_journey_id'), 'journey', ['id'], unique=False)
    op.create_table('trip',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('mode_id', sa.Integer(), nullable=True),
    sa.Column('journey_id', sa.Integer(), nullable=True),
    sa.Column('origin_location_id', sa.Integer(), nullable=True),
    sa.Column('destination_location_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('distance_travelled', sa.Float(), nullable=False),
    sa.Column('co_travellers', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['destination_location_id'], ['location_points.id'], ),
    sa.ForeignKeyConstraint(['journey_id'], ['journey.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['mode_id'], ['trip_mode.id'], ),
    sa.ForeignKeyConstraint(['origin_location_id'], ['location_points.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trip_id'), 'trip', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trip_id'), table_name='trip')
    op.drop_table('trip')
    op.drop_index(op.f('ix_journey_id'), table_name='journey')
    op.drop_table('journey')
    op.drop_index(op.f('ix_estimated_route_time_id'), table_name='estimated_route_time')
    op.drop_table('estimated_route_time')
    op.drop_index(op.f('ix_data_collector_id'), table_name='data_collector')
    op.drop_table('data_collector')
    op.drop_index(op.f('ix_complaint_id'), table_name='complaint')
    op.drop_table('complaint')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_trip_mode_id'), table_name='trip_mode')
    op.drop_table('trip_mode')
    op.drop_index(op.f('ix_location_points_id'), table_name='location_points')
    op.drop_table('location_points')
    # ### end Alembic commands ###
